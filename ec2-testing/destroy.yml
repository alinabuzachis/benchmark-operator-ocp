---
- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars/main.yml

  module_defaults:
    group/aws:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"

  tasks:
    - name: Get EC2 Instance ID.
      ec2_instance_info:
        filters:
          "tag:Name": "{{ resource_name }}"
          instance-state-name: ["running"]
      register: ec2_info

    - name: Delete EC2 instance.
      ec2:
        state: absent
        wait: true
        instance_ids:
          - "{{ ec2_info.instances[0].instance_id }}"
      when: ec2_info.instances

    - name: Get EC2 security group ID.
      ec2_group_info:
        filters:
          group-name: "{{ resource_name }}"
      register: ec2_group

    - name: Delete EC2 security group.
      ec2_group:
        state: absent
        group_id: "{{ ec2_group.security_groups[0].group_id }}"
      when: ec2_group.security_groups

    - name: Get VPC ID.
      ec2_vpc_net_info:
        filters:
          "tag:Name": "{{ resource_name }}"
      register: vpc

    - name: Fail if no VPC found.
      fail:
      when: not vpc.vpcs

    - name: Set VPC ID variable.
      set_fact:
        vpc_id: "{{ vpc.vpcs[0].vpc_id }}"

    - name: Delete VPC route table.
      ec2_vpc_route_table:
        state: absent
        vpc_id: "{{ vpc_id }}"
        lookup: tag
        tags:
          Name: "{{ resource_name }}"

    - name: Delete VPC internet gateway.
      ec2_vpc_igw:
        state: absent
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ resource_name }}"

    - name: Delete VPC subnet.
      ec2_vpc_subnet:
        state: absent
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ aws_subnet_cidr }}"

    - name: Delete VPC.
      ec2_vpc_net:
        state: absent
        name: "{{ resource_name }}"
        cidr_block: 10.0.0.0/16
        tags:
          Name: "{{ resource_name }}"
        tenancy: default
